<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.3">
  <POU Name="C_BINARYREADER" Id="{3b66d005-3f47-4af4-a375-894516dc8bea}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK C_BINARYREADER
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_BASESTREAM 	: I_STREAM;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="BASE_STREAM" Id="{71cc1926-e2dc-417b-be5f-3e2a654df2aa}">
      <Declaration><![CDATA[PROPERTY BASE_STREAM : I_STREAM]]></Declaration>
      <Get Name="Get" Id="{e0c76d2d-5cef-40c9-82e4-8af46b1fce9d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Base_Stream := _BASESTREAM;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="CLOSE" Id="{de3cb16b-5206-41f8-a6b6-71c7bc0eb741}">
      <Declaration><![CDATA[METHOD CLOSE : DINT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Close := _BASESTREAM.Close();
_BASESTREAM := 0;
RETURN;]]></ST>
      </Implementation>
    </Method>
    <Method Name="NEW" Id="{4608d601-859c-47f4-831c-e01655b347f4}">
      <Declaration><![CDATA[METHOD NEW : DINT
VAR_INPUT
	STREAM : I_STREAM;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF STREAM = 0 THEN
	New := 1;
	RETURN;
ELSE
	IF STREAM.IsValid THEN
		_BASESTREAM := STREAM;
		_BASESTREAM.Seek( 0, E_STREAMSEEKTYPE.Origin);
		New := -1;
		RETURN;
	ELSE
		New := 1;
		RETURN;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="READ_BOOL" Id="{76d45542-60ae-421d-a421-b25cd500e521}">
      <Declaration><![CDATA[METHOD READ_BOOL : DINT
VAR_INPUT
	out_data : POINTER TO BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _BASESTREAM = 0 THEN
	Read_Bool := 1;
	RETURN;
END_IF

Read_Bool := _BASESTREAM.Read(out_data , 1);
RETURN;]]></ST>
      </Implementation>
    </Method>
    <Method Name="READ_BYTES" Id="{369d9618-2206-40c5-ad7f-cfb8812abbed}">
      <Declaration><![CDATA[METHOD READ_BYTES : DINT
VAR_INPUT
	out_data 	: POINTER TO BYTE;
	length		: UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _BASESTREAM = 0 THEN
	Read_Bytes := 1;
	RETURN;
END_IF

Read_Bytes := _BASESTREAM.Read(out_data, length);
RETURN;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="READ_DOUBLE" Id="{db11d57f-7dd3-4a73-85f8-532f0941f54f}">
      <Declaration><![CDATA[METHOD READ_DOUBLE : DINT
VAR_INPUT
	out_data : POINTER TO LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _BASESTREAM = 0 THEN
	Read_Double := 1;
	RETURN;
END_IF

Read_Double := _BASESTREAM.Read(out_data , 8);
RETURN;]]></ST>
      </Implementation>
    </Method>
    <Method Name="READ_FLOAT" Id="{44748d10-e06c-4cd0-983b-1dae6ee03d82}">
      <Declaration><![CDATA[METHOD READ_FLOAT : DINT
VAR_INPUT
	out_data : POINTER TO REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _BASESTREAM = 0 THEN
	Read_Float := 1;
	RETURN;
END_IF

Read_Float := _BASESTREAM.Read(out_data , 4);
RETURN;]]></ST>
      </Implementation>
    </Method>
    <Method Name="READ_INT16" Id="{2b50ad5d-6d0a-4a08-a27e-1dee1b4acca2}">
      <Declaration><![CDATA[METHOD READ_INT16 : DINT
VAR_INPUT
	out_data : POINTER TO INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _BASESTREAM = 0 THEN
	Read_Int16 := 1;
	RETURN;
END_IF

Read_Int16 := _BASESTREAM.Read(out_data , 2);
RETURN;]]></ST>
      </Implementation>
    </Method>
    <Method Name="READ_INT32" Id="{555c708b-06af-4983-bc95-ad72bfff7519}">
      <Declaration><![CDATA[METHOD READ_INT32 : DINT
VAR_INPUT
	out_data : POINTER TO DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _BASESTREAM = 0 THEN
	Read_Int32 := 1;
	RETURN;
END_IF

Read_Int32 := _BASESTREAM.Read(out_data , 4);
RETURN;]]></ST>
      </Implementation>
    </Method>
    <Method Name="READ_STRING" Id="{8bbb68ff-c92f-4a55-8401-1cce0167fdf4}">
      <Declaration><![CDATA[METHOD READ_STRING : DINT
VAR_INPUT
	out_data 	: PVOID;
	length		: UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _BASESTREAM = 0 THEN
	Read_String := 1;
	RETURN;
END_IF

Read_String := _BASESTREAM.Read(out_data, length);
RETURN;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="READ_UINT16" Id="{73cf70b9-22f9-426b-a7d1-458ae4cb6acc}">
      <Declaration><![CDATA[METHOD READ_UINT16 : DINT
VAR_INPUT
	out_data : POINTER TO UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _BASESTREAM = 0 THEN
	Read_UInt16 := 1;
	RETURN;
END_IF

Read_UInt16 := _BASESTREAM.Read(out_data , 4);
RETURN;]]></ST>
      </Implementation>
    </Method>
    <Method Name="READ_UINT32" Id="{b9ecc356-b187-4340-98f9-de3663fa31b7}">
      <Declaration><![CDATA[METHOD READ_UINT32 : DINT
VAR_INPUT
	out_data : POINTER TO UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _BASESTREAM = 0 THEN
	Read_UInt32 := 1;
	RETURN;
END_IF

Read_UInt32 := _BASESTREAM.Read(out_data , 4);
RETURN;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>